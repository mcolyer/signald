#!/usr/bin/env ruby

require "rubygems"
require "bundler/setup"
require "date"
require "optparse"
require "posix_mq"

# FIXME: Should probably use just one serialization format
require "yaml"
require "json"

require_relative "./evaluator"

Signal.trap("INT") do
  exit
end

options = {config_file: "config.yml"}
OptionParser.new do |opts|
  opts.banner = "Usage: signald [options]"

  opts.on("-cCONFIG", "--config-file=CONFIG", "Specify the configuration file") do |v|
    options[:config_file] = v
  end
end.parse!

config = YAML.load_file(options[:config_file])
signals = config["signals"] || {}

signal_config = nil
signal_name = nil
is_child = false

signals.each_pair do |name, attrs|
  child_pid = fork()
  is_child = !child_pid

  if is_child
    signal_name = name
    signal_config = attrs
    break
  end
end

if is_child
  require "./signals/#{signal_config["type"]}"
  klass = Object.const_get("#{signal_config["type"].capitalize}Signal")
  signal = klass.new(signal_name, signal_config)
  signal.watch
else
  $0 = "signald: primary"

  evaluator = Evaluator.new(config)
  queue_name = ENV["SIGNALD_QUEUE"] || "/signald"
  POSIX_MQ.open(queue_name, :rw) do |queue|
    while true do
      if message = queue.receive.first
        evaluator.evaluate(message)
      end
    end
  end
end

Process.waitall
