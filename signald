#!/usr/bin/env ruby

require "date"
require "rubygems"
require "bundler/setup"
require "posix/mqueue"
require "yaml"

Signal.trap("INT") do
  exit
end

config = YAML.load_file("config.yml")
signals = config["signals"] 

signal_config = nil
signal_name = nil
is_child = false

signals.each_pair do |name, attrs|
  child_pid = fork()
  is_child = !child_pid

  if is_child
    signal_name = name
    signal_config = attrs
    break
  end
end

if is_child
  require "./signals/#{signal_config["type"]}"
  klass = Object.const_get("#{signal_config["type"].capitalize}Signal")
  signal = klass.new(signal_name, signal_config)
  signal.watch
else
  actions = config["actions"] 
  actions.each_pair do |action, attrs|
  end

  queue = POSIX::Mqueue.new("/signald")
  while true do
    begin
      puts "#{Time.now} #{queue.timedreceive}"
    rescue POSIX::Mqueue::QueueEmpty
      sleep(1)
    end
  end
end

Process.waitall
